<?php

//This class extends php's built in SoapClient class with logic for handling different timeout durations
//for making calls. The default timeout is 60 seconds, but can be changed by including a 'timeout' value
//in the options array passed in as an argument.
//Timeouts are measured in seconds.
class SoapClientTimeout extends SoapClient
{
	private $timeout = 0;
	private $connecttimeout = 0;
	
	public function __construct($wsdl, $options) {
		//If 'timeout' is defined, set the call tmeout to its value in seconds
		if (isset($options['timeout'])) {
			$this->timeout = $options['timeout'];
			unset($options['timeout']);
		}

		//Now call parent constructor
		parent::__construct($wsdl, $options);
	}
	

	public function __doRequest($request, $location, $action, $version, $one_way = FALSE)
	{
		if (($this->timeout===0) && ($this->connecttimeout===0))
		{
			// Call via parent because we require no timeout
			$response = parent::__doRequest($request, $location, $action, $version, $one_way);
		}
		else
		{
			//Attempt to intitialize CURL
			$curl = curl_init($location);
			if ($curl === false)
            {
				throw new Exception('Failed to initialize curl');
			}

			$options = array(
				CURLOPT_VERBOSE => false,
				CURLOPT_RETURNTRANSFER => true,
				CURLOPT_POST => true,
				CURLOPT_POSTFIELDS => $request,
				CURLOPT_HEADER => false,
				CURLOPT_NOSIGNAL => true,	//http://www.php.net/manual/en/function.curl-setopt.php#104597
				CURLOPT_HTTPHEADER => array(sprintf('Content-Type: %s', $version == 2 ? 'application/soap+xml' : 'text/xml'), sprintf('SOAPAction: %s', $action)),
				CURLOPT_SSL_VERIFYPEER => true
				);
			
			if ($this->timeout>0) {
			    //Set call timeout in seconds	
		        $options[CURLOPT_TIMEOUT] = $this->timeout;	
			}

			if ($this->connecttimeout>0) {
                //Set connextion timeout in seconds.
				$options[CURLOPT_CONNECTTIMEOUT] = $this->connecttimeout;	
			}
			
			if (curl_setopt_array($curl, $options) === false)
				throw new Exception('Failed setting CURL options');
			
            //Make call using CURL (including timeout settings)
			$response = curl_exec($curl);
			
			if (curl_errno($curl))
            {
				throw new Exception(curl_error($curl));
			}
			curl_close($curl);
		}
		
		// Return response if necessary.
		if (!$one_way)
			return ($response);
	}
}
